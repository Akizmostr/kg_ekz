<!-- (C) 2017 Хаджинова Н.В., каф. ИТАС, БГУИР -->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//RU">
<HTML>
<HEAD>
<LINK rel=stylesheet href="lb2/Оболочка/css/style.css" type=text/css>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1251">
<META HTTP-EQUIV="Content-Language" CONTENT="ru">
<title>Лекция № 8 &quot;Фильтрация изображений&quot;</title>
</head>

<body>
<div align="center">
  <h1>Лекция № 8 &quot;<strong>Фильтрация изображений</strong>&quot; </h1>
</div>
<hr>
<h2>Темы, рассматриваемые в данной лекции: </h2>
<ol>
  <li>Понятие линейного фильтра. Задание ядра фильтра. Фильтрация на границе изображения.</li>
  <li>Сглаживающие фильтры. Гауссовский фильтр.</li>
  <li>Контрастноповышающие фильтры.</li>
  <li>Нахождение границ. Разностные фильтры. Фильтр Прюита. Фильтр Собеля.</li>
  <li>Программная реализация линейного фильтра.</li>
  <li>Нелинейные фильтры.<hr>
  </li>
</ol>
<h3>Введение</h3>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_1">Представим себе, что, глядя на какую-нибудь сцену одним глазом, мы подносим к нему стеклянную пластину. Если эта пластина не была идеально прозрачной, то наблюдаемое изображение изменится. В зависимости от стекла, из которого сделана пластина, изменение может быть самым разнообразным. К примеру, если это стекло было цветным, то изображение приобретет соответствующий оттенок, а от мутного стекла - станет размытым.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_1"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_2"><strong>Фильтрация изображений</strong>&nbsp;аналогична такому разглядыванию мира через стеклянную пластину, хотя и позволяет добиться гораздо большего разнообразия эффектов, чем эксперименты с разными пластинами. Под фильтрацией изображений понимают операцию, имеющую своим результатом изображение того же размера, полученное из исходного по некоторым правилам. Обычно интенсивность (цвет) каждого пикселя результирующего изображения обусловлена интенсивностями (цветами) пикселей, расположенных в некоторой его окрестности в исходном изображении.</p>

<p>Правила, задающие фильтрацию (их называют&nbsp;<strong>фильтрами</strong>&nbsp;), могут быть самыми разнообразными. В этой лекции мы рассмотрим простейшие фильтры. Заметим, что, согласно предложенному определению, операция, заключающаяся в последовательном применении двух или более фильтраций, тоже является фильтрацией. Таким образом, можно говорить о&nbsp;<strong>составных фильтрах</strong>, соответствующих комбинациям простых. Изучив основные типы фильтров в данной лекции, мы будем иметь дело с применением фильтров, составленных из них, для решения разнообразных задач в последующих лекциях. Фильтрация изображений является одной из самых фундаментальных операций компьютерного зрения, распознавания образов и обработки изображений. Фактически, с той или иной фильтрации исходных изображений начинается работа подавляющего большинства методов. Рассматриваемые в этой лекции фильтры имеют, таким образом, чрезвычайную важность с точки зрения их применения в различных приложениях.</p>
<h3>1. Линейные фильтры</h3>
<a xmlns:edi="http://www.intuit.ru/2010/edi" name="sect3"></a>
<h4>Определение</h4>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_4"><strong>Линейные фильтры</strong>&nbsp;представляют собой семейство фильтров, имеющих очень простое математическое описание. Вместе с тем они позволяют добиться самых разнообразных эффектов. Будем считать, что задано исходное полутоновое изображение&nbsp;A, и обозначим интенсивности его пикселей&nbsp;A(x, y). Линейный фильтр определяется вещественнозначной функцией&nbsp;F, заданной на растре. Данная функция называется ядром фильтра, а сама фильтрация производится при помощи операции дискретной свертки (взвешенного суммирования) (см. также Лекция №7&nbsp;<a href="http://www.intuit.ru/studies/courses/993/163/lecture/4503">"Алгоритмы обработки растровых изображений"</a>):</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_4"></div>
<div id="id_8">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="bdb06848eb941c39e6d9f55792f50caa.png" alt="B(x, y) = \sum\limits_i \sum\limits_j F(i, j) \cdot A(x + i, y + j) ."></td>
        <td valign="center" align="right">( 8.1)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_9">Результатом служит изображение&nbsp;B. В определении (8.1) мы опустили пределы суммирования. Обычно ядро фильтра отлично от нуля только в некоторой окрестности&nbsp;N&nbsp;точки&nbsp;(0, 0). За пределами этой окрестности&nbsp;F(i, j)&nbsp;или в точности равно нулю, или очень близко к нему, так что можно им пренебречь. Суммирование в (8.1) производится по&nbsp;<img src="d6556caeaa03d0b42a011fbbc5c60cf6.png" alt="(i, j) \in N">, и значение каждого пикселя&nbsp;B(x, y)&nbsp;определяется пикселями изображения&nbsp;A, которые лежат в окне&nbsp;N, центрированном в точке&nbsp;(x, y)(мы будем обозначать это множество&nbsp;N(x, y)&nbsp;). Ядро фильтра, заданное на прямоугольной окрестности&nbsp;N, может рассматриваться как матрица&nbsp;m&nbsp;на&nbsp;n, где длины сторон являются нечетными числами. При задании ядра матрицей&nbsp;Mkl, ее следует центрировать:</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_9"></div>
<div id="id_24">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="da31ff1464ccc1d9667682b899a53927.png" alt="F(i, j) =M_{i+ {\frac{m-1}{2}} j+ {\frac{n-1}{2}}}"></td>
        <td valign="center" align="right">( 8.2)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_25">Также нуждается в дополнительном прояснении ситуация, когда пиксель&nbsp;(x, y)&nbsp;находится в окрестности краев изображения. В этом случае&nbsp;A(x + i, y + j)&nbsp;в определении (8.1) может соответствовать пикселю&nbsp;A, лежащему за пределами изображения&nbsp;A. Данную проблему можно разрешить несколькими способами.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_25"></div>
<ul id="id_30">
  <li xmlns:edi="http://www.intuit.ru/2010/edi">Не проводить фильтрацию для таких пикселей, обрезав изображение&nbsp;B&nbsp;по краям или закрасив их, к примеру, черным цветом.</li>
  <li xmlns:edi="http://www.intuit.ru/2010/edi">Не включать соответствующий пиксель в суммирование, распределив его вес&nbsp;F(i, j)&nbsp;равномерно среди других пикселей окрестности&nbsp;N(x, y).</li>
  <li xmlns:edi="http://www.intuit.ru/2010/edi">Доопределить значения пикселей за границами изображения при помощи экстраполяции. Например, считать постоянным значение интенсивности вблизи границы (для пикселя&nbsp;(-2, 5)&nbsp;имеем&nbsp;A(-2, 5) = A(0, 5)&nbsp;) или считать постоянным градиент интенсивности вблизи границы (&nbsp;A(-2, 5) = A(0, 5) + 2(A(0, 5) - A(1, 5))&nbsp;).</li>
  <li xmlns:edi="http://www.intuit.ru/2010/edi">Доопределить значения пикселей за границами изображения, при помощи зеркального отражения (&nbsp;A(-2, 5) = A(2, 5)&nbsp;).</li>
</ul>
<div id="mark_30"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_42">Выбор конкретного способа нужно производить с учетом конкретного фильтра и особенностей конкретного приложения.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_42"></div>
<h4>2. Сглаживающие фильтры</h4>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_44">Сглаживающие фильтры действуют на изображение аналогично мутному стеклу из примера в начале лекции: изображение становится нерезким, размытым. Простейший&nbsp;<strong>прямоугольный</strong>&nbsp;сглаживающий фильтр радиуса&nbsp;r&nbsp;задается при помощи матрицы размера&nbsp;(2r + 1) x (2r + 1), все значения которой равны</p>
<div id="id_47"><img src="9c662f77abd5121f37be9fd18eccea54.png" alt="\frac{1}{{(2r+1)}^2},"></div>
а сумма по всем элементам матрицы равна, таким образом, единице. При фильтрации с данным ядром значение пикселя заменяется на усредненное значение пикселей в квадрате со стороной&nbsp;2r+1&nbsp;вокруг него. Пример фильтрации при помощи прямоугольного фильтра приведен на&nbsp;рис. 8.1.
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_44"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_49">Рассмотрим особенности сглаживания при помощи прямоугольного фильтра. Характерной чертой этого фильтра, отличающей его, к примеру, от эффекта расфокусировки линз в реальной жизни, является то, что образом белой точки на черном фоне будет равномерно серый квадрат. Проявления этого эффекта хорошо заметны и на нижнем правом изображении&nbsp;рис. 8.1: длинные узкие объекты "размазываются" в прямоугольники равномерной интенсивности.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_49"></div>
<div text-align="left" id="id_50">
  <div><img src="8_1-1.jpg" alt=""></div>
  <br>
</div>
<div id="mark_50"></div>
<div text-align="left" id="id_51">
  <div><img src="8_1-2.jpg" alt=""></div>
  <br>
</div>
<div id="mark_51"></div>
<div text-align="left" id="id_52">
  <div><img src="8_1-3.jpg" alt=""></div>
  <br>
</div>
<div id="mark_52"></div>
<div text-align="left" id="id_53"><a name="image.8.1"></a>
  <div><img src="8_1-4.jpg" alt="Прямоугольный сглаживающий фильтр. Слева вверху - пример изображения, справа вверху - результат фильтрации для r = 1, слева внизу - результат фильтрации для r = 3,справа внизу - результат фильтрации для r = 5."></div>
  <br>
  <strong>Рис. 8.1.&nbsp;</strong>Прямоугольный сглаживающий фильтр. Слева вверху - пример изображения, справа вверху - результат фильтрации для r = 1, слева внизу - результат фильтрации для r = 3,справа внизу - результат фильтрации для r = 5.</div>
<div id="mark_53"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_54">Для чего могут применяться сглаживающие фильтры? Одним из их возможных применений является шумоподавление, т.е. задача восстановления исходного изображения, к пикселям которого добавлен случайный шум. Шум меняется независимо от пикселя к пикселю и, при условии, что математическое ожидание значения шума равно нулю, шумы соседних пикселей будут компенсировать друг друга. Чем больше окно фильтрации, тем меньше будет усредненная интенсивность шума, однако при этом будет происходить и существенное размытие значащих деталей изображения.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_54"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_55">Естественным предположением об исходном незашумленном изображении будет схожесть значений интенсивности пикселей, находящихся рядом. Причем чем меньше расстояние между пикселями, тем больше вероятность их похожести. Это и отличает исходное незашумленное изображение от шумовой компоненты, для которой схожесть пикселей никак не зависит от расстояния между ними. Исходя из вышесказанного можно предположить, что шумоподавление при помощи прямоугольного фильтра имеет существенный недостаток: пиксели на расстоянии&nbsp;r&nbsp;от обрабатываемого оказывают на результат тот же эффект, что и соседние.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_55"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_57">Более эффективное шумоподавление можно, таким образом, осуществить, если влияние пикселей друг на друга будет уменьшаться с расстоянием. Этим свойством обладает&nbsp;<strong>гауссовский</strong>&nbsp;фильтр с ядром:</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_57"></div>
<div id="id_58">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="ef48e8c38835b01c62b83c4aba7e1c10.png" alt="F_{gauss}(i, j) = \frac{1}{{2 \pi \sigma}^2} \exp   \left( - \frac{i^2 + j^2}{{2 \sigma}^2} \right)."></td>
        <td valign="center" align="right">( 8.3)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_59">Гауссовский фильтр имеет ненулевое ядро бесконечного размера. Однако ядро фильтра очень быстро убывает к нулю при удалении от точки&nbsp;(0, 0), и потому на практике можно ограничиться сверткой с окном небольшого размера вокруг&nbsp;(0, 0)&nbsp;(например, взяв радиус окна равным&nbsp;<img src="407661373b84a82058da067dc55c79c7.png" alt="3 \sigma">).</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_59"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_63">Гауссовская фильтрация также является сглаживающей. Однако, в отличие от прямоугольного фильтра, образом точки при гауссовой фильтрации будет симметричное размытое пятно, с убыванием яркости от середины к краям, что гораздо ближе к реальному размытию от расфокусированных линз. Как и следовало ожидать, гауссовская фильтрация более эффективна при шумоподавлении (рис. 8.2): влияние пикселей друг на друга при гауссовой фильтрации обратно пропорционально квадрату расстояния между ними. Как видно из (8.3), коэффициент пропорциональности, а следовательно, и степень размытия, определяются параметром&nbsp;<img src="2965f522bafff03e3e5a5851a7b12a17.png" alt="\sigma."></p>
<h4>3. Контрастоповышающие фильтры</h4>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_65">Если сглаживающие фильтры снижают локальную контрастность изображения, размывая его, то контрастоповышающие фильтры производят обратный эффект. Ядро контрастоповышающего фильтра имеет значение, большее&nbsp;1, в точке&nbsp;(0, 0), при общей сумме всех значений, равной&nbsp;1. Например, контрастоповышающим фильтром является фильтр с ядром, задаваемым матрицей:</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_65"></div>
<div id="id_69">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="295b3fae9c869b210e6d2f0c7e272f51.png" alt="M_1^{contr}= \left( \begin{array}{ccc}   0 & -1 & 0 \\   -1 & 5 & -1 \\   0 & -1 & 0   \end{array} \right)"></td>
        <td valign="center" align="right">( 8.4)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_70">или матрицей</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_70"></div>
<div id="id_71">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="e353b3be1dde6f188e62e49707fbc0b6.png" alt="M_2^{contr}= \left( \begin{array}{ccc}   -1 & -1 & -1 \\   -1 & 9 & -1 \\   -1 & -1 & -1   \end{array} \right)"></td>
        <td valign="center" align="right">( 8.5)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_72">Эффект повышения контраста достигается за счет того, что фильтр подчеркивает разницу между интенсивностями соседних пикселей, удаляя эти интенсивности друг от друга (рис. 8.3). Этот эффект будет тем сильней, чем больше значение центрального члена ядра. Характерным артефактом линейной контрастоповышающей фильтрации являются заметные светлые и менее заметные темные ореолы вокруг границ.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_72"></div>
<div text-align="left" id="id_73">
  <div><img src="8_2-1.jpg" alt=""></div>
  <br>
</div>
<div id="mark_73"></div>
<div text-align="left" id="id_74">
  <div><img src="8_2-2.jpg" alt=""></div>
  <br>
</div>
<div id="mark_74"></div>
<div text-align="left" id="id_75">
  <div><img src="8_2-3.jpg" alt=""></div>
  <br>
</div>
<div id="mark_75"></div>
<div text-align="left" id="id_76"><a name="image.8.2"></a>
  <div><img src="8_2-4.jpg" alt="Шумоподавление при помощи сглаживающих линейных фильтров. Верхний рисунок - фрагмент исходного изображения, второй сверху - сильно зашумленное изображение, третий - результат применения гауссовского фильтра с  сигма = 2, четвертый - результат применения прямоугольного фильтра с r = 3. При примерно одинаковой эффективности шумоподавления, гауссовский фильтр лучше восстанавливает детали исходного изображения."></div>
  <br>
  <strong>Рис. 8.2.&nbsp;</strong>Шумоподавление при помощи сглаживающих линейных фильтров. Верхний рисунок - фрагмент исходного изображения, второй сверху - сильно зашумленное изображение, третий - результат применения гауссовского фильтра с сигма = 2, четвертый - результат применения прямоугольного фильтра с r = 3. При примерно одинаковой эффективности шумоподавления, гауссовский фильтр лучше восстанавливает детали исходного изображения.</div>
<div id="mark_76"></div>
<div text-align="left" id="id_77">
  <div><img src="8_3-1.jpg" alt=""></div>
  <br>
</div>
<div id="mark_77"></div>
<div text-align="left" id="id_78">
  <div><img src="8_3-2.jpg" alt=""></div>
  <br>
</div>
<div id="mark_78"></div>
<div text-align="left" id="id_79"><a name="image.8.3"></a>
  <div><img src="8_3-3.jpg" alt="Контрастоповышающая фильтрация"></div>
  <br>
  <strong>Рис. 8.3.&nbsp;</strong>Контрастоповышающая фильтрация</div>
<div id="mark_79"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_80">На рисунке 8.3 сверху - исходное изображение. Среднее - эффект от применения фильтра с ядром&nbsp;<img src="119156bc6812705cec3246e0336840d4.png" alt="M_1^{contr}">, последнее - эффект от применения фильтра с ядром&nbsp;<img src="a6094f615af1ceaf3cf9c52911cb44e2.png" alt="M_2^{contr}">.</p>
<h4>4. Разностные фильтры</h4>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_83">В этом разделе мы кратко рассмотрим линейные фильтры, задаваемые дискретными аппроксимациями дифференциальных операторов (по методу&nbsp;<strong>конечных разностей</strong>&nbsp;). Данные фильтры играют важнейшую роль во многих приложениях. В частности, нами будет подробно рассмотрено их применение для задачи поиска границ на изображении. В данном же разделе мы коротко рассмотрим их определения и свойства.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_83"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_84">Простейшим дифференциальным оператором является взятие производной по&nbsp;x&nbsp;-координате&nbsp;<img src="4d6c379f66675645b3ffe28a15306857.png" alt="\frac{\partial}{\partial x}">. Данный оператор определен для непрерывных функций. Существует множество способов определить аналогичный оператор для дискретных изображений при помощи линейного фильтра. В частности, распространенными вариантами являются фильтры Прюита (Prewitt) и Собеля (Sobel).</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_84"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_87">Фильтр Прюита задается матрицей</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_87"></div>
<div id="id_88">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="21877fcc46067da50d3df387f76e14e6.png" alt="M_1^{prewitt}= \frac{1}{3} \left( \begin{array}{ccc}   -1 & 0 & 1 \\   -1 & 0 & 1 \\   -1 & 0 & 1   \end{array} \right)."></td>
        <td valign="center" align="right">( 8.6)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_89">Фильтр Собеля задается матрицей</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_89"></div>
<div id="id_90">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="fcbff82ffb1f41b9a70d73957cc707aa.png" alt="M_1^{sobel}= \frac{1}{4} \left( \begin{array}{ccc}   -1 & 0 & 1 \\   -2 & 0 & 2 \\   -1 & 0 & 1   \end{array} \right)."></td>
        <td valign="center" align="right">( 8.7)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_91">Фильтры, приближающие оператор производной по&nbsp;y&nbsp;-координате&nbsp;<img src="b96eeba5bc87a1624d01be9c183947f9.png" alt="\frac{\partial}{\partial y}">, получаются путем транспонирования матриц.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_91"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_94">В отличии от сглаживающих и контрастоповышающих фильтров, не меняющих среднюю интенсивность изображения (сумма элементов ядра равна единице), в результате применения разностных операторов получается, как правило, изображение со средним значением пикселя близким к нулю (сумма элементов ядра равна нулю). Вертикальным перепадам (границам) исходного изображения соответствуют пиксели с большими по модулю значениями на результирующем изображении. Поэтому разностные фильтры называют также&nbsp;<strong>фильтрами, находящими границы</strong>&nbsp;(рис. 8.4).</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_94"></div>
<div text-align="left" id="id_95">
  <div><img src="8_4-1.jpg" alt=""></div>
  <br>
</div>
<div id="mark_95"></div>
<div text-align="left" id="id_96"><a name="image.8.4"></a>
  <div><img src="8_4-2.jpg" alt=""></div>
  <br>
  <strong>Рис. 8.4.</strong></div>
<div id="mark_96"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_97">На верхнем рисунке - нахождение&nbsp;<img src="4d6c379f66675645b3ffe28a15306857.png" alt="\frac{\partial}{\partial x}">&nbsp;при помощи фильтра Собеля с ядром&nbsp;<img src="b295bf5d0ef69043dc8aa8d4947578c3.png" alt="M_{sobel}">, нижний - нахождение&nbsp;<img src="b96eeba5bc87a1624d01be9c183947f9.png" alt="\frac{\partial}{\partial y}">&nbsp;при помощи фильтра Собеля с ядром&nbsp;<img src="6b4682157ce828b6e53992bbafd5612a.png" alt="M_{sobel}^T">. Серый цвет соответстует значению 0.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_97"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_102">Аналогично вышеприведенным фильтрам, по методу конечных разностей можно составить фильтры для других дифференциальных операторов. В частности, важный для многих приложений дифференциальный оператор Лапласа (&nbsp;<strong>лапласиан</strong>&nbsp;)&nbsp;<img src="cc9e7808837e200e9e6a4d370ef12ea6.png" alt="\Delta = \frac{{\partial}^2}{\partial x^2}+\frac{{\partial}^2}{\partial y^2}">&nbsp;можно приблизить для дискретных изображений фильтром с матрицей (один из вариантов):</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_102"></div>
<div id="id_104">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="c9238633b6903a9602046e341801a5d7.png"></td>
        <td valign="center" align="right">( 8.8)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_105">Как видно на&nbsp;рис. 8.5, в результате применения дискретного лапласиана большие по модулю значения соответствуют как вертикальным, так и горизонтальным перепадам яркости.&nbsp;<img src="4c5c4899e9b9f039d51667a07a9d093c.png" alt="M_\Delta">&nbsp;является, таким образом, фильтром, находящим границы любой ориентации. Нахождение границ на изображении может производиться путем применения этого фильтра и взятия всех пикселей, модуль значения которых превосходит некоторый порог. Однако такой алгоритм имеет существенные недостатки. Главный из них - неопределенность в выборе величины порога. Для разных частей изображения приемлемый результат обычно получается при существенно разных пороговых значениях. Кроме того, разностные фильтры очень чувствительны к шумам изображения. Задача нахождения границ на изображении является, как мы видим, весьма непростой. Мы посвятим ей отдельную&nbsp;<a href="http://www.intuit.ru/studies/courses/993/163/lecture/4507">"Нахождение границ"&nbsp;</a>.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_105"></div>
<div text-align="left" id="id_107">
  <div><img src="8_5-1.jpg" alt=""></div>
  <br>
</div>
<div id="mark_107"></div>
<div text-align="left" id="id_108"><a name="image.8.5"></a>
  <div><img src="8_5-2.jpg" alt="Нахождение границ при помощи линейной фильтрации"></div>
  <br>
  <strong>Рис. 8.5.&nbsp;</strong>Нахождение границ при помощи линейной фильтрации</div>
<div id="mark_108"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_109">Вверху- исходное изображение, внизу - результат применения фильтра&nbsp;<img src="e74231ee5b357c5f5c9ee22dfcdbcc0c.png" alt="M_{\Delta}">. Серый цвет соответстует значению 0</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_109"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_111">Заметим, что выделение всех пикселей, значения которых по модулю больше некоторого порога, является некоторой нелинейной локальной операцией, которую можно рассматривать как простейший пример нелинейной фильтрации, к рассмотрению которой мы и переходим.</p>
<h4>5. Примеры нелинейных фильтров</h4>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_112">Линейные фильтры, несмотря на разнообразие производимых ими эффектов, не позволяют проделывать некоторые самые естественные операции. Хорошим примером служит пороговая фильтрация, упомянутая нами в предыдущем разделе. Результатом пороговой фильтрации служит бинарное изображение, определяемое следующим образом:</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_112"></div>
<div id="id_113">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="91a0e170e8752f8cedf2073548f34741.png" alt="B(x, y) = { \left\{ \begin{array}{lrl} 1, & \text{если} & A(x, y) > \gamma \\  0, & \text{иначе} & \\  \end{array} \right. }."></td>
        <td valign="center" align="right">( 8.9)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_114">Величина&nbsp;<img src="ae539dfcc999c28e25a0f3ae65c1de79.png" alt="\gamma">&nbsp;является&nbsp;<strong>порогом фильтрации</strong>.В приложениях используется еще целый ряд простейших нелинейных фильтров. Например, модуль изображения, содержащего пиксели с отрицательным значением, или фильтр, обнуляющий все значения пикселей, меньше данного порога.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_114"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_116">Более сложным фильтром, задействующим в вычислениях окрестность пикселя, является медиана. Медианная фильтрация определяется следующим образом:</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_116"></div>
<div id="id_117">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="6b7834b8e2f8d07232ddc5734fe02b38.png" alt="B_{median}(x, y) = median \left\{ N(x, y) \right\},"></td>
        <td valign="center" align="right">( 8.10)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_118">т.е. результат фильтрации есть медианное значение пикселей окрестности1, форма которой выбирается произвольно. В разделе 8.2 мы рассмотрели шумоподавление при помощи сглаживающих фильтров. Шум с нулевым математическим ожиданием, добавленный к исходному сигналу, является только одним из видов помех.&nbsp;<strong>Медианная фильтрация</strong>&nbsp;способна эффективно справляться с помехами в более общем случае, когда помехи независимо воздействуют на отдельные пиксели.Например, такими помехами являются "битые" и "горячие" пиксели при цифровой съемке, "снеговой" шум, когда часть пикселей заменяется на пиксели с максимальной интенсивностью, и т.п. Преимущество медианной фильтрации перед линейной сглаживающей фильтрацией заключается в том, что "горячий" пиксель на темном фоне будет заменен на темный, а не "размазан" по окрестности (рис. 8.6).</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_118"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_120">Последней парой фильтров, которые мы рассмотрим в этом разделе, являются фильтры минимум и максимум, которые определяются по правилам</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_120"></div>
<div id="id_121">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="b74bb83551f89868897d9047d3e052bc.png" alt="B_{\min} (x, y) = \min \left\{ N(x, y) \right\},"></td>
        <td valign="center" align="right">( 8.11)</td>
      </tr>
    </tbody>
  </table>
</div>
<div id="id_122">
  <table border="0">
    <tbody>
      <tr>
        <td valign="center" align="left"><img src="f1ab52fbe18ac0818a0a0e12ae951adf.png" alt="B_{max} (x, y) = \max \left\{ N(x, y) \right\},"></td>
        <td valign="center" align="right">( 8.12)</td>
      </tr>
    </tbody>
  </table>
</div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_123">т.е. результат фильтрации есть минимальное и максимальное значения пикселей окрестности.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_123"></div>
<div text-align="left" id="id_124">
  <div><img src="8_6-1.jpg" alt=""></div>
  <br>
</div>
<div id="mark_124"></div>
<div text-align="left" id="id_125">
  <div><img src="8_6-2.jpg" alt=""></div>
  <br>
</div>
<div id="mark_125"></div>
<div text-align="left" id="id_126">
  <div><img src="8_6-3.jpg" alt=""></div>
  <br>
</div>
<div id="mark_126"></div>
<div text-align="left" id="id_127"><a name="image.8.6"></a>
  <div><img src="8_6-4.jpg" alt="Применение нелинейной фильтрации. Слева вверху - пример изображения, справа вверху &ndash; изображение 'загрязнено' большим количеством 'битых' черных и белых пикселей, внизу слева - результат нелинейной медианной фильтрации с окрестностью 3 x 3 пикселя, внизу справа &ndash; для сравнения, результат применения линейного прямоугольного фильтра с той же окрестностью."></div>
  <br>
  <strong>Рис. 8.6.&nbsp;</strong>Применение нелинейной фильтрации. Слева вверху - пример изображения, справа вверху &ndash; изображение "загрязнено" большим количеством "битых" черных и белых пикселей, внизу слева - результат нелинейной медианной фильтрации с окрестностью 3 x 3 пикселя, внизу справа &ndash; для сравнения, результат применения линейного прямоугольного фильтра с той же окрестностью.</div>
<div id="mark_127"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_128">Данные фильтры, как правило, применяются для бинарных изображений. В применении к бинарным изображениям, минимум и максимум, а также еще несколько составных фильтров, построенных на их основе, называются&nbsp;<strong>морфологическими операторами</strong>.</p>
<h4>6. Морфологические операторы</h4>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_129">Морфологические операторы суть фильтры, применяемые для морфологического анализа бинарных изображений. В морфологическом анализе бинарное изображение рассматривается как вид задания формы двумерной геометрической фигуры (пиксели, равные&nbsp;1, считаются лежащими внутри фигуры, а равные&nbsp;0&nbsp;- вовне). Морфологический анализ активно применяется в таких приложениях, как векторизация изображений, оптическое распознавание символов и другие задачи распознавания образов.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_129"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_132">Базовыми морфологическими операторами являются, как уже отмечалось, фильтры минимум и максимум. В результате их применения форма, задаваемая изображением, сужается и, соответственно, расширяется (рис. 8.7), поэтому в морфологическом анализе данные фильтры называют&nbsp;<strong>сужающим</strong>&nbsp;и&nbsp;<strong>расширяющим</strong>. Окрестность пикселя&nbsp;(x, y), фигурирующая в определении (8.11), для морфологических операторов называется&nbsp;<strong>структурным элементом</strong>.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_132"></div>
<p xmlns:edi="http://www.intuit.ru/2010/edi" id="id_134">Часто применяемыми составными морфологическими операторами являются&nbsp;<strong>открывающий</strong>&nbsp;и&nbsp;<strong>замыкающий</strong>&nbsp;фильтры. Первый состоит в последовательном применении сужающего и расширяющего операторов с одинаковым структурным элементом. Его морфологический эффект заключается в удалении малых изолированных частей фигуры. Применение сначала расширяющего, а затем сужающего оператора дает замыкающий фильтр. Его эффект заключается в заполнении малых изолированных дырок фигуры. В обоих случаях, "малость" объекта определяется размером и формой структурного элемента операторов.</p>
<div xmlns:edi="http://www.intuit.ru/2010/edi" id="mark_134"></div>
<div text-align="left" id="id_135">
  <div><img src="8_7-1.jpg" alt="а"></div>
  <br>
  а</div>
<div id="mark_135"></div>
<div text-align="left" id="id_136">
  <div><img src="8_7-2.jpg" alt="б"></div>
  <br>
  б</div>
<div id="mark_136"></div>
<div text-align="left" id="id_137">
  <div><img src="8_7-3.jpg" alt="в"></div>
  <br>
  в</div>
<div id="mark_137"></div>
<div text-align="left" id="id_138">
  <div><img src="8_7-4.jpg" alt="г"></div>
  <br>
  г</div>
<div id="mark_138"></div>
<div text-align="left" id="id_139"><a name="image.8.7"></a>
  <div><img src="8_7-5.jpg" alt="Применение морфологических операторов. Структурный элемент - квадратная окрестность 5x5. а - исходное изображение, б - сужающий фильтр, в - расширяющий фильтр, г - открывающий фильтр, д - замыкающий фильтр"></div>
  <br>
  <strong>Рис. 8.7.&nbsp;</strong>Применение морфологических операторов. Структурный элемент - квадратная окрестность 5x5. а - исходное изображение, б - сужающий фильтр, в - расширяющий фильтр, г - открывающий фильтр, д - замыкающий фильтр</div>
</body>
</html>
